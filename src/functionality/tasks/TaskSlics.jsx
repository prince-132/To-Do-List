import { createSlice } from '@reduxjs/toolkit'; // Importing createSlice from Redux Toolkit to create a slice of the store

// Creating a slice for tasks with initial state and reducers
const tasksSlice = createSlice({
  name: 'tasks', // Name of the slice
  initialState: [], // Initial state for tasks slice, an empty array
  reducers: {
    // Reducer to set tasks with the payload, replacing the existing state
    setTasks: (state, action) => {
      return action.payload;
    },
    // Reducer to add a new task to the state
    addTask: (state, action) => {
      state.push(action.payload);
    },
    // Reducer to delete a task from the state by filtering out the task with the given id
    deleteTask: (state, action) => {
      return state.filter((task) => task.id !== action.payload);
    },
    // Reducer to edit a task's text by finding the task with the given id and updating its text
    editTask: (state, action) => {
      const { id, text } = action.payload;
      const existingTask = state.find((task) => task.id === id);
      if (existingTask) {
        existingTask.text = text;
      }
    },
    // Reducer to toggle the completed status of a task by finding the task with the given id and toggling its completed property
    toggleComplete: (state, action) => {
      const task = state.find((task) => task.id === action.payload);
      if (task) {
        task.completed = !task.completed;
      }
    },
  },
});

// Exporting action creators generated by createSlice for each reducer function
export const { setTasks, addTask, deleteTask, editTask, toggleComplete } = tasksSlice.actions;
export default tasksSlice.reducer; // Exporting the reducer function generated by createSlice
